Part 1 of 2 - Annual Performance Reviews are around the corner, and as a Software Engineer writing an excellent summary is a skill that is easy to learn.

Today I would like to share my experiences with you that I have learned over the years reviewing people's writeups and which ones stand out.

While every organization has different expectations about the structure of writeups, these two points are common in every organization to which I have contributed.

1. Contributions 
There are several ways to summarize your contributions, and what has worked best has been to revolve around 'impact.' No matter your project, your work always resolves around Impact (whether big or small). Hence you could use the SBI format, where (S)ituation, (B)ehaviour, and (I)mpact. Expanding below.

Situation - Present the project's status when you started working on it. Did the project have ambiguities, or did someone leave the team and you had to take over, or did you drive a project originating from an escalation (customer or operations), etc.? Was your team under a heavy load of incoming bugs you wanted to resolve?

Behavior - In this section, define what your approach was. What did you do, and how did you do it? Did you have to design a new system and influence your peers/seniors? Did you have to work closely with business/operations/etc.? And understand the problem, or did you work with your Product Managers to define the roadmap and the execution plan?

Impact - What did your action result in? Did your work help improve a process, and what was its Impact (time/revenue/cost-savings/etc.)? Did you rearchitect the system to improve performance (what was the improvement in numbers and graphs)? For the long-term Impact that would spread across years on a complex project, mention the Impact of a few milestones that have already been launched.

Pro tip: Linking to documents that you have created helps people understand your thought process and is a HUGE bonus

2. Area for growth
This is the most difficult section for people to answer as this forces you to step back and introspect. This needs much more elaboration, and I will cover this in my next post soon, which will help you write your next year's review document in a stress-free manner. (Link to the next post: https://lnkd.in/gGY_KntU)

Remember, you are the captain of your own career's ship. Learning to navigate it is a skill that you MUST learn!

Repost this to share this knowledge and add value to your network

Follow me if you like content about growing your Software Engineering and Engineering Leadership career. Press the ðŸ”” icon on my profile to receive the subsequent updates as soon as I publish them
